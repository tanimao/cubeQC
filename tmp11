from QCpackage2 import MainAnalysis0604
import cv2
from QCpackage2 import camera0814
from QCpackage2 import cameraImitation
import serial
from QCpackage2 import checkSign
from QCpackage2 import ServoRun
from QCpackage2 import calibration
import numpy as np

##コミット用テストコメント

###読み込めてるかの確認
print('__name__ is', __name__)
print('MainAnalysis __name__ is ', MainAnalysis0604.__name__)



###カメラの起動
cam1 = cv2.VideoCapture(0)
cam2 = cv2.VideoCapture(6)
cam3 = cv2.VideoCapture(2)
cam4 = cv2.VideoCapture(4)
cam5 = cv2.VideoCapture(7)
cam6 = cv2.VideoCapture(3)
width_cam  = int(cam1.get(cv2.CAP_PROP_FRAME_WIDTH ))//2
height_cam = int(cam1.get(cv2.CAP_PROP_FRAME_HEIGHT))//2
cubeID = 1


###シリアル通信機器読み込み
ser = serial.Serial('/dev/tty.usbmodem142201',9600)
###六個のデータセットを3組保持するために、ナムパイ配列を使う。
saveName = [0] * 6
ImageName= [0] * 6
cubedata = np.zeros((3,6,8))###camID, directionID 8/27追記: camID はこの時点では無理か。
datacali = np.zeros((3,6,8))
'''
こういう配列ができる。
最上段は1 個めの配列。第一面の directionID,xhole,yhole,rhole,Emin,xsize,ysize,bump。
array([[[0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0.]],

       [[0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0.]],

       [[0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0.]]])

'''
############
###まず、キューブを置いて、回転させる。
print('勝手にジグが回転したでしょう？\n目の前の台座にキューブを置けたらEnterを押してください>>')
firststep = input()
ser.write(b'200\n')

picfolder = 'mao_pictures/pic201102/'
filename = 'files/data201015_.txt'


#############################################################################################
###0番目撮影(初期処理)
#############################################################################################
#print('cam123: cubeID = 1, daizaID = 1')
print('0番目撮影：１を押して撮影>>')
cubeID_save3Names = camera0814.read_3Cams(cam1, cam2, cam3, width_cam, height_cam, cubeID)
###############画像の名前
#saveName = 'cube'+str(i+1)+'cam1_11'
#cubeID_saveNames[0] はcubeID

cubeID = cubeID_save3Names[0]

daizalist= [8,1,2,3,4,5,6,7]
daizaID= daizalist[cubeID%8]

saveName[0] = cubeID_save3Names[1]
ImageName[0]= picfolder+ saveName[0] + '.jpg'

saveName[1] = cubeID_save3Names[2]
ImageName[1]= picfolder+ saveName[1] + '.jpg'

saveName[2] = cubeID_save3Names[3]
ImageName[2]= picfolder+ saveName[2] + '.jpg'


for isurface in range(3):
###cubedata[0]の、第1面、第2面、第3面に代入する。
    cubedata[0][isurface] = MainAnalysis0604.ANALYSIS(saveName[isurface], ImageName[isurface], isurface)
    print('cubedata for ', saveName[isurface], ' is ', cubedata[0][isurface])
    print('cubedata, type ',cubedata,  type(cubedata[0][isurface]))
        
    ###cubedataが取れれば、saveNameは保存しておく必要はない。

###ここまでで、cubedata[0]の1~3のみにデータがある。
###これをcubedata[1]に写す。
cubedata[1] = cubedata[0]
print('cubeID :', cubeID, cubedata)

###ここまでできたら、ジグを回転させる。
ser.write(b'200\n')


sign = ['']*2
sign[0] = 'first'
#############################################################################################
###1番目撮影(初期処理2)
#############################################################################################
while True:

    err_middle =[0,0]
    err_middle[0] = 0
    cubeID  = cubeID +1
    daizaID = daizalist[cubeID%8]
    print('cubeID更新:')

    ###cam456については1つ前のやつ
    print('cam456: cubeID = ',cubeID-1, ' daizaID = ',daizalist[cubeID%8-1])
    print('cam123: cubeID = ',cubeID,   ' daizaID = ',daizalist[cubeID%8])
    print('cubeID, daiza = ', cubeID, ', ', daizaID)
    print('ここからループ：１を押して撮影>>')
    cubeID_save6Names = camera0814.read_6Cams(cam1, cam2, cam3, cam4, cam5, cam6, width_cam, height_cam, cubeID)
    
    #cubeID = cubeID_save6Names[0]
    #daizaID= daizalist[cubeID%8]
    #daizaID= (cubeID%8)+1
        
    saveName[0] = cubeID_save6Names[1]                              ###1番目の1~3面
    ImageName[0]= picfolder+ saveName[0] + '.jpg'
    
    saveName[1] = cubeID_save6Names[2]
    ImageName[1]= picfolder+ saveName[1] + '.jpg'
    
    saveName[2] = cubeID_save6Names[3]
    ImageName[2]= picfolder+ saveName[2] + '.jpg'
    
    saveName[3] = cubeID_save6Names[4]                              ###0番目の4~6面
    ImageName[3]= picfolder+ saveName[3] + '.jpg'
    
    saveName[4] = cubeID_save6Names[5]
    ImageName[4]= picfolder+ saveName[4] + '.jpg'
    
    saveName[5] = cubeID_save6Names[6]
    ImageName[5]= picfolder+ saveName[5] + '.jpg'
   

    ###解析の前に円盤を回転
    ser.write(b'200\n')

    img3 = cv2.imread(ImageName[3],0)
    img4 = cv2.imread(ImageName[4],0)
    img5 = cv2.imread(ImageName[5],0)

    tr3 = img3[int(768/2-30):int(768/2+30), int(1024/2-30):int(1024/2+30)]
    tr4 = img4[int(768/2-30):int(768/2+30), int(1024/2-30):int(1024/2+30)]
    tr5 = img5[int(768/2-30):int(768/2+30), int(1024/2-30):int(1024/2+30)]
    if np.average(tr3) <130 or np.average(tr4) < 130 or np.average(tr5)<130:    
        print('cube is not here.')
        err_middle[0] = 1
        cubedata[1][3]=[0,0,0,0,0,0,0,0]
        cubedata[1][4]=[0,0,0,0,0,0,0,0]
        cubedata[1][5]=[0,0,0,0,0,0,0,0]
        file_data = open(filename,'a')
        file_data.write(saveName[3] +' icam: '+str(0)+' direction: '+str(0)+' '+str(cubedata[1][3])+' size(outline) :'+str(0)+','+str(0)+'\n')
        file_data.write(saveName[4] +' icam: '+str(0)+' direction: '+str(0)+' '+str(cubedata[1][4])+' size(outline) :'+str(0)+','+str(0)+'\n')
        file_data.write(saveName[5] +' icam: '+str(0)+' direction: '+str(0)+' '+str(cubedata[1][5])+' size(outline) :'+str(0)+','+str(0)+'\n')
        file_data.close()
        
    
    else:
        for isurface in range(3):
        ###cubedata[1]の、第4面、第5面、第6面に代入する。
            cubedata[1][isurface+3] = MainAnalysis0604.ANALYSIS(saveName[isurface+3], ImageName[isurface+3],isurface+3)
            #if cubedata[1][isurface+3] == [0, 0, 0, 0, 0, 0, 0, 0]:
            if  (cubedata[0][isurface][0]==0 and cubedata[0][isurface][1]==0 and
                 cubedata[0][isurface][2]==0 and cubedata[0][isurface][3]==0 and
                 cubedata[0][isurface][4]==0 and cubedata[0][isurface][5]==0 and 
                 cubedata[0][isurface][6]==0 and cubedata[0][isurface][7]==0  ):
                print("error cube : middle")
                err_middle[0] = 1
                
#            print('cubedata for ', saveName[isurface], ' is ', cubedata[1][isurface])
#            print('cubedata, type ',cubedata,  type(cubedata[1][isurface]))
        
    

    ###sign[1]に前回の情報を保管しておく
    sign[1] = sign[0]
    err_middle[1] = err_middle[0]
    ###cubedataは、directionID, xhole, yhole, rhole, Emin, xsize, ysize, bump です。
    ###このcubedataをインプットとして、signを吐き出す関数を作ってここに入れる。
    ###一個目の配列を全て突っ込む。

    ###cubedata[0]の、第1面、第2面、第3面に代入する。時間短縮のため、モータを回転しながら。
    for isurface in range(3):
        cubedata[0][isurface]   = MainAnalysis0604.ANALYSIS(saveName[isurface],   ImageName[isurface], isurface)
        #if cubedata[0][isurface] == [0, 0, 0, 0, 0, 0, 0, 0]:
        if  (cubedata[0][isurface][0]==0 and cubedata[0][isurface][1]==0 and
             cubedata[0][isurface][2]==0 and cubedata[0][isurface][3]==0 and
             cubedata[0][isurface][4]==0 and cubedata[0][isurface][5]==0 and 
             cubedata[0][isurface][6]==0 and cubedata[0][isurface][7]==0  ):
            print("error cube : middle")
            err_middle[0] = 1

    ###突っ込む前に、台座ごと、カメラごとの見え方の補正を行う。
    ###１行ずつ読み込む。ここでcamID を定義
    for icam in range(6):
        datacali[1][icam] = calibration.calibration(daizalist[cubeID%8-1], cubedata[1][icam], icam)

    ###これを突っ込む。
    sign[0] = checkSign.checkSign(datacali[1])
#    file = open ('QCpackage2/cubedata_good.txt','a')
#    file.write(str(cubeID)+ '  '+ str(cubedata[2])+ '\n')
#    file.close()

#    filecali = open ('QCpackage2/cubedata_cali_good.txt', 'a')
    
    print('sign, err_middle:',sign[0], err_middle[1])
    #err_middle[1]が６こ解析後のやつ。
    #err_middle[0]はまだ3個分。
    if err_middle[1] == 0:
        ServoRun.ServoRun(sign[0], sign[1], ser)
    if err_middle[1] == 1:
        print('error and middle.')
        ServoRun.ServoRun('middle',sign[1], ser)
        sign[0] = 'middle'

    ###念の為、cubedata[1]をcubedata[2]に避難しておく。
    cubedata[2] = cubedata[1]
    datacali[2] = datacali[1]
    ###写したあと、[0]の1~3面を[1]の方に写す。
    cubedata[1] = cubedata[0]
    #print('cubedata is \n', cubedata)
    
    
#############################################################################################
###2番目撮影(初期処理?ここからループ?)
#############################################################################################
'''
while True:


    cubeID_save6Names = camera0609.read_6Cams(cam1, cam2, cam3, cam4, cam5, cam6, width_cam, height_cam, cubeID)

    cubeID = cubeID_save6Names[0]
    
    saveName[0] = cubeID_save6Names[1]                              ###2番目の1~3面
    ImageName[0]= 'mao_pictures/pic0610good/'+ saveName[0] + '.jpg'
    
    saveName[1] = cubeID_save6Names[2]
    ImageName[1]= 'mao_pictures/pic0610good/'+ saveName[1] + '.jpg'
    
    saveName[2] = cubeID_save6Names[3]
    ImageName[2]= 'mao_pictures/pic0610good/'+ saveName[2] + '.jpg'
    
    saveName[3] = cubeID_save6Names[4]                              ###1番目の4~6面
    ImageName[3]= 'mao_pictures/pic0610good/'+ saveName[3] + '.jpg'
    
    saveName[4] = cubeID_save6Names[5]
    ImageName[4]= 'mao_pictures/pic0610good/'+ saveName[4] + '.jpg'
    
    saveName[5] = cubeID_save6Names[6]
    ImageName[5]= 'mao_pictures/pic0610good/'+ saveName[5] + '.jpg'
    
    for isurface in range(3):
    ###cubedata[1]の、第4面、第5面、第6面に代入する。
        cubedata[1][isurface+3] = MainAnalysis0604.ANALYSIS(saveName[isurface+3], ImageName[isurface+3])
    ###cubedata[0]の、第1面、第2面、第3面に代入する。
        cubedata[0][isurface]   = MainAnalysis0604.ANALYSIS(saveName[isurface],   ImageName[isurface])
        
        print('cubedata for ', saveName[isurface], ' is ', cubedata[1][isurface])
        print('cubedata, type ',cubedata,  type(cubedata[1][isurface]))
    
    sign = checkSign.checkSign(cubedata[1])
    
    ###念の為、cubedata[1]をcubedata[2]に避難しておく。
    cubedata[2] = cubedata[1]
    ###写したあと、[0]の1~3面を[1]の方に写す。
    cubedata[1] = cubedata[0]
    print('cubedata is \n', cubedata)
    file = open ('QCpackage/cubedata.txt','a')
    file.write(str(cubeID)+ '  '+ str(cubedata[2])+ '\n')
    #file.close()
    ###サーボモータとジグを動かす
    ServoRun.ServoRun(sign, ser)
'''



